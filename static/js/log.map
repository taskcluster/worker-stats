{"version":3,"file":"log.js","sources":["@traceur/generated/TemplateParser/3","static/src/log.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"AAAA,MAAM,ECGiB,eAAA,CACP,cAAA,CACQ,kBAAA,CACJ,2BAAA,CAAA,CCNpB,SAAA;;ACAI,KAAA,aAAA;KFGG,WAAA;KACA,IAAA;KACA,YAAA;KACA,QAAA;AGNH,sBHQJ,SAAM,eAAA,CACQ,OAAA,CAAS;AACnB,QAAA,CAAA,SAAA,EAAiB,IAAI,WAAU,CAAA,CAAA;AAC/B,QAAA,CAAA,OAAA,EAAe,QAAA;AACf,QAAA,CAAA,IAAA,EAAY,KAAA;AAAA,GAAA;AIZhB,GAAC,eAAA,CAAA,WAAA,CAA4B;AJe3B,aAAA,CAAA,SAAA,CAAU,CAAE;AACN,SAAA,IAAA,EAAM,IAAI,IAAG,CAAC,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAClB,UAAA,CAAA,OAAA,CAAA,IAAiB,CAAC,GAAA,CAAA;AAAA,KAAA;AAGpB,UAAA,CAAA,SAAA,CAAO;;AACD,SAAA,KAAA,EAAO,QAAO,CAAC,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA;AAEnB,YAAO,KAAA,CAAA,SAAA,CAAA,gBAA+B,CAAC,IAAA,CAAM,MAAA,CAAA,CAAA,IAAW,WAAE,IAAA,CAAS;mBACrD,KAAA;AACZ,eAAA,CAAA,GAAW,CAAC,IAAA,CAAA;sBACE,CAAA,CAAA;AAAA,OAAA,CAAA,CAAA,CAAA,MACR,aAAO;AACb,eAAA,CAAA,KAAa,CAAC,wCAAA,CAA0C,KAAA,CAAA;AAAA,OAAA,CAAA,CAAA;AAAA;AAAA,GAAA;AAK1D,KAAA,WAAA,EAAa,IAAI,eAAc,CACjC,GAAI,YAAW,CAAC,QAAA,CAAA,aAAsB,CAAC,MAAA,CAAA,CAAA,CAAA;AAGzC,YAAA,CAAA,MAAiB,CAAA,CAAA;AKrCjB","sourcesContent":["define($__placeholder__0, $__placeholder__1);","/*jshint esnext: true */\n\n/** glue for building the task */\nimport TasksStore from './store/tasks';\nimport Log from './store/log';\nimport TaskLogView from './view/task_log';\nimport parseQS from './util/querystring_parse';\n\nclass TaskController {\n  constructor(logView) {\n    this.taskStore = new TasksStore();\n    this.logView = logView;\n    this.task = null;\n  }\n\n  renderLog() {\n    var log = new Log(this.task.log);\n    this.logView.pipe(log);\n  }\n\n  update() {\n    var task = parseQS(document.location.search);\n    // attempt to find the task\n    return this.taskStore.refreshTaskUntil(task, 'log').then((task) => {\n      this.task = task;\n      console.log(task);\n      this.renderLog();\n    }).catch(() => {\n      console.error('Could not fetch task from query string', task);\n    });\n  }\n}\n\nvar controller = new TaskController(\n  new TaskLogView(document.querySelector('#log'))\n);\n\ncontroller.update();\n","function($__placeholder__0) {\n      $__placeholder__1\n    }","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","return $__placeholder__0"]}