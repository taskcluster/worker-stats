{"version":3,"file":"create_task.js","sources":["@traceur/generated/TemplateParser/3","static/src/create_task.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"AAAA,MAAM,ECGe,gBAAA,CACE,cAAA,CACP,YAAA,CACM,aAAA,CACC,mBAAA,CAAA,CCPvB,SAAA;;ACAI,KAAA,aAAA;;KFIG,WAAA;KACA,IAAA;KACA,UAAA;;AAGH,KAAA,KAAA,EAAO,IAAI,SAAQ,CAAC,QAAA,CAAA,aAAsB,CAAC,cAAA,CAAA,CAAA;AAC3C,KAAA,MAAA,EAAQ,IAAI,WAAU,CAAA,CAAA;AACtB,KAAA,KAAA,EAAO,IAAI,SAAQ,CAAC;AACtB,UAAA,CAAQ,SAAA,CAAA,MAAA;AACR,QAAA,CAAM,IAAA;AACN,QAAA,CAAM,GAAA;AACN,cAAA,CAAY;AAAA,GAAA,CAAA;AAGd,MAAA,CAAA,IAAS,CAAC,QAAA,CAAA,IAAA,CAAA;AAEV,MAAA,CAAA,QAAA,aAAiB,IAAA;AACX,OAAA,KAAA,EAAO,IAAI,UAAS,CAAC;AACvB,WAAA,CAAO,KAAA,CAAA,KAAA;AACP,aAAA,CAAS,EAAC,IAAA,CAAA,OAAA;AAAA,KAAA,CAAA;AAGZ,SAAA,CAAA,UAAgB,CAAC,IAAA,CAAA,KAAA,CAAY,KAAA,CAAA,CAAA,IAAU,WAAE,MAAA,CAAW;AAClD,YAAO,MAAA,CAAA,gBAAsB,CAAC,MAAA,CAAQ,MAAA,CAAA;AAAA,KAAA,CAAA,CAAA,CAAA,IACjC,WAAE,IAAA;AACH,SAAA,OAAA,EAAS,IAAI,IAAG,CAAC,IAAA,CAAA,GAAA,CAAA;AACrB,YAAA,CAAA,MAAA,aAAiB,KAAA,CAAU;AACzB,YAAA,CAAA,KAAU,CAAC,KAAA,CAAA;AAAA,OAAA,CAAA;AAGb,YAAA,CAAA,KAAA,cAAqB;AACnB,eAAA,CAAA,GAAW,CAAC,MAAA,CAAA;AAAA,OAAA,CAAA;AAAA,KAAA,CAAA,CAAA,CAAA,MAER,YAAE,GAAA,CAAQ;AAChB,aAAA,CAAA,KAAa,CAAC,uBAAA,CAAyB,IAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA,CAAA;AGtC3C","sourcesContent":["define($__placeholder__0, $__placeholder__1);","/*jshint esnext: true */\n\n/** glue for building the task */\nmodule Terminal from '../vendor/term';\nimport TasksStore from 'store/tasks';\nimport Log from 'store/log';\nimport TaskModel from 'model/task';\nimport {TaskView} from 'view/create_task';\n\nvar view = new TaskView(document.querySelector('#create-task'));\nvar store = new TasksStore();\nvar term = new Terminal({\n  colors: Terminal.colors,\n  cols: 100,\n  rows: 30,\n  screenKeys: true\n});\n\nterm.open(document.body);\n\nview.onsubmit = (json) => {\n  var task = new TaskModel({\n    image: json.image,\n    command: [json.command]\n  });\n\n  store.createTask(json.queue, task).then((result) => {\n    return store.refreshTaskUntil(result, 'log');\n  }).then((task) => {\n    var reader = new Log(task.log);\n    reader.ondata = (value) => {\n      term.write(value);\n    };\n\n    reader.onend = () => {\n      console.log('done');\n    };\n  }).catch((err) => {\n    console.error('Could not create task', err);\n  });\n};\n","function($__placeholder__0) {\n      $__placeholder__1\n    }","var __moduleName = $__placeholder__0;","return $__placeholder__0"]}