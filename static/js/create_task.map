{"version":3,"file":"create_task.js","sources":["@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/0","../src/store/log.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","../src/store/tasks.js","../src/view/create_task.js","@traceur/generated/TemplateParser/7","../src/create_task.js","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","sourcesContent":["$traceurRuntime.ModuleStore.registerModule($__placeholder__0,\n            $__placeholder__1);","function() {\n      $__placeholder__0\n    }","var __moduleName = $__placeholder__0;","/*jshint esnext:true */\nvar COMPLETE_HEADER = 'x-ms-meta-complete';\n\nfunction req(method, url) {\n  return superagent(method, url).\n            set('x-ms-version', '2013-08-15');\n}\n\nfunction getReq(logger) {\n  var current = req('GET', logger.url);\n  if (logger.etag) current.set('If-None-Match', logger.etag);\n  if (logger.offset) current.set('Range', 'bytes=' + logger.offset + '-');\n  return current;\n}\n\nfunction headReq(logger) {\n  var current = req('HEAD', logger.url);\n  if (logger.etag) current.set('If-None-Match', logger.etag);\n  return current;\n}\n\nfunction logIsComplete(req) {\n  return req.headers['x-ms-meta-complete'];\n}\n\nexport class Log {\n  constructor(url, interval=1000) {\n    this.url = url;\n    this.offset = 0;\n    this.complete = false;\n    this.etag = null;\n    this.interval = interval;\n\n    this.aborted = false;\n    this.onerror = function() {};\n    this.ondata = function() {};\n    this.onend = function() {};\n    this._read();\n  }\n\n  _waitForEtagChange() {\n    headReq(this).end((err, res) => {\n      if (res.ok) {\n        // must have made at least one get is complete\n        if (this.etag && logIsComplete(res)) return this._complete();\n        return this._read();\n      }\n\n      // otherwise wait for new content\n      setTimeout(this._waitForEtagChange.bind(this), this.interval);\n    });\n  }\n\n  _complete() {\n    if (!this.complete) {\n      this.complete = true;\n      this.onend();\n    }\n  }\n\n  _read() {\n    var req = getReq(this);\n    var progress;\n\n    req.end((err, res) => {\n      if (err) {\n        this.aborted = true;\n        return this.onerror(err);\n      }\n\n      // if the get request was not okay check for new data after the interval.\n      if (!res.ok) {\n        return setTimeout(\n          this._waitForEtagChange.bind(this),\n          this.interval\n        );\n      }\n\n      this.ondata(res.text);\n      this.etag = res.header.etag;\n\n      if (progress) this.offset += progress.total || 0;\n      if (logIsComplete(res)) this._complete();\n      if (!this.complete) this._waitForEtagChange();\n    });\n\n    // keep track of the last status event to get the binary offset of the log.\n    req.xhr.addEventListener('progress', (status) => {\n      progress = status;\n    });\n  }\n}\n","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","/*jshint esnext: true */\n\nvar AUTH_URL = '/azure';\n\nexport class TasksStore {\n  constructor() {\n    this.azure = new AzureTable({\n      signUrl: AUTH_URL\n    });\n  }\n\n  /**\n  POST a task to the server.\n\n  @param {Object} task to submit to the server.\n  @return Promise\n  */\n  createTask(task) {\n    return new Promise((accept, reject) => {\n      var req = superagent.post('/task/aws-docker').send(task);\n      req.end((err, response) => {\n        console.log(response);\n        if (!response.ok) {\n          reject(new Error('could not create task'));\n          return;\n        }\n        accept(response.body);\n      });\n    });\n  }\n\n  refreshTask(task) {\n    return this.azure.buildQuery({\n      '$top': 1,\n      '$filter': \"(PartitionKey eq '\" + task.PartitionKey + \"') and \" +\n                 \"(RowKey eq '\" + task.RowKey + \"')\"\n\n    }).then((values) => {\n      return values[0];\n    });\n  }\n\n  refreshTaskUntil(task, field, timeout) {\n    timeout = timeout || 1000;\n\n    return new Promise((accept, reject) => {\n      var refresh = () => {\n        this.refreshTask(task).then((task) => {\n          if (task[field]) return accept(task);\n          setTimeout(refresh, timeout);\n        }).catch(reject);\n      };\n\n      refresh();\n    });\n  }\n}\n","/*jshint esnext:true */\n\n/**\nParse the values out of the form.\n\n@return {Object} convert a form into json values.\n*/\nfunction parseForm(form) {\n  var object = {};\n  var elements =\n    form.querySelectorAll('[name]');\n\n  for (var i = 0; i < elements.length; i++) {\n    var el = elements[i];\n    object[el.getAttribute('name')] = el.value;\n  }\n\n  return object;\n}\n\n\nexport class TaskView {\n  /**\n  Task view for submitting tasks.\n\n  @param {Element} element which is the root of the view.\n  */\n  constructor(element) {\n    this.element = element;\n    console.log(this.element, '<<<!');\n\n    var form = element.querySelector('form');\n    form.onsubmit = function(e) {\n      e.preventDefault();\n      var object = parseForm(form);\n      this.onsubmit(object);\n    }.bind(this);\n  }\n\n  onsubmit() {}\n}\n","$traceurRuntime.getModuleImpl($__placeholder__0)","/*jshint esnext: true */\n\n/** glue for building the task */\nimport {TasksStore} from './store/tasks';\nimport {TaskView} from './view/create_task';\nimport {Log} from './store/log';\n\nvar view = new TaskView(document.querySelector('#create-task'));\nvar store = new TasksStore();\n\nview.onsubmit = (json) => {\n  store.createTask(json).then((result) => {\n    return store.refreshTaskUntil(result, 'log');\n  }).then((task) => {\n    var reader = new Log(task.log);\n    reader.ondata = (value) => {\n      console.log(value);\n    };\n\n    reader.onend = () => {\n      console.log('done');\n    };\n  }).catch((err) => {\n    console.error('Could not create task', err);\n  });\n};\n","System.get($__placeholder__0 +'')"]}