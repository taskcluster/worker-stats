{"version":3,"file":"create_task.js","sources":["@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","static/src/view/create_task.js","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/5"],"names":[],"mappings":"AAAA,MAAM,ICAN,SAAA;;ACAI,KAAA,aAAA;ACOJ,UAAS,UAAA,CAAU,IAAA,CAAM;AACnB,OAAA,OAAA,EAAS,EAAA,CAAA;AACT,OAAA,SAAA,EACF,KAAA,CAAA,gBAAqB,CAAC,QAAA,CAAA;AAExB,OAAA,EAAS,GAAA,EAAA,EAAI,EAAA,CAAG,EAAA,EAAI,SAAA,CAAA,MAAA,CAAiB,EAAA,EAAA,CAAK;AACpC,SAAA,GAAA,EAAK,SAAA,CAAS,CAAA,CAAA;AAClB,YAAA,CAAO,EAAA,CAAA,YAAe,CAAC,MAAA,CAAA,CAAA,EAAW,GAAA,CAAA,KAAA;AAAA;AAGpC,UAAO,OAAA;AAAA;ACjBL,gBDqBG,SAAM,SAAA,CAMC,OAAA,CAAS;AACnB,QAAA,CAAA,OAAA,EAAe,QAAA;AAEX,OAAA,KAAA,EAAO,QAAA,CAAA,aAAqB,CAAC,MAAA,CAAA;AACjC,QAAA,CAAA,QAAA,EAAgB,SAAA,CAAS,CAAA,CAAG;AAC1B,OAAA,CAAA,cAAgB,CAAA,CAAA;AACZ,SAAA,OAAA,EAAS,UAAS,CAAC,IAAA,CAAA;AACvB,UAAA,CAAA,QAAa,CAAC,MAAA,CAAA;AAAA,KAAA,CAAA,IACV,CAAC,IAAA,CAAA;AAAA,GAAA;AEnCX,GAAC,eAAA,CAAA,WAAA,CAA4B,YFsC3B,QAAA,CAAA,SAAA,CAAS,CAAE,EAAA,CAAA,CAAA;AGtCb;ACAA,kBAAwB;AAAE;;ACA1B,sBAAA,CAAoB;AAAA,GAAA;AAAA,CAAA,CAAA","sourcesContent":["define($__placeholder__0, $__placeholder__1);","function($__placeholder__0) {\n      $__placeholder__1\n    }","var __moduleName = $__placeholder__0;","/*jshint esnext:true */\n\n/**\nParse the values out of the form.\n\n@return {Object} convert a form into json values.\n*/\nfunction parseForm(form) {\n  var object = {};\n  var elements =\n    form.querySelectorAll('[name]');\n\n  for (var i = 0; i < elements.length; i++) {\n    var el = elements[i];\n    object[el.getAttribute('name')] = el.value;\n  }\n\n  return object;\n}\n\n\nexport class TaskView {\n  /**\n  Task view for submitting tasks.\n\n  @param {Element} element which is the root of the view.\n  */\n  constructor(element) {\n    this.element = element;\n\n    var form = element.querySelector('form');\n    form.onsubmit = function(e) {\n      e.preventDefault();\n      var object = parseForm(form);\n      this.onsubmit(object);\n    }.bind(this);\n  }\n\n  onsubmit() {}\n}\n","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__transpiledModule: true"]}